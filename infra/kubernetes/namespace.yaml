# =============================================================================
# KUBERNETES - NAMESPACE
# =============================================================================
# Namespace para isolar recursos do SPTrans Pipeline
# =============================================================================

apiVersion: v1
kind: Namespace
metadata:
  name: sptrans-pipeline
  labels:
    name: sptrans-pipeline
    environment: production
    project: sptrans-data-pipeline
    managed-by: kubernetes
    
  annotations:
    description: "SPTrans Data Pipeline - Real-time public transport analytics"
    contact: "rafael@sptrans-pipeline.com"
    created-by: "DevOps Team"

---

# =============================================================================
# RESOURCE QUOTAS
# =============================================================================
# Limites de recursos para o namespace

apiVersion: v1
kind: ResourceQuota
metadata:
  name: sptrans-quota
  namespace: sptrans-pipeline
spec:
  hard:
    # Compute resources
    requests.cpu: "20"
    requests.memory: 40Gi
    limits.cpu: "40"
    limits.memory: 80Gi
    
    # Storage
    requests.storage: 100Gi
    persistentvolumeclaims: "10"
    
    # Objects
    pods: "50"
    services: "20"
    configmaps: "30"
    secrets: "30"
    
    # Load Balancers
    services.loadbalancers: "5"

---

# =============================================================================
# LIMIT RANGES
# =============================================================================
# Limites padrão para containers

apiVersion: v1
kind: LimitRange
metadata:
  name: sptrans-limits
  namespace: sptrans-pipeline
spec:
  limits:
    # Container limits
    - type: Container
      default:
        cpu: "1"
        memory: 2Gi
      defaultRequest:
        cpu: "500m"
        memory: 1Gi
      max:
        cpu: "8"
        memory: 16Gi
      min:
        cpu: "100m"
        memory: 128Mi
    
    # Pod limits
    - type: Pod
      max:
        cpu: "16"
        memory: 32Gi
      min:
        cpu: "100m"
        memory: 128Mi
    
    # PVC limits
    - type: PersistentVolumeClaim
      max:
        storage: 50Gi
      min:
        storage: 1Gi

---

# =============================================================================
# NETWORK POLICY
# =============================================================================
# Política de rede para segurança

apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: sptrans-network-policy
  namespace: sptrans-pipeline
spec:
  podSelector: {}
  policyTypes:
    - Ingress
    - Egress
  
  ingress:
    # Permitir tráfego interno no namespace
    - from:
        - namespaceSelector:
            matchLabels:
              name: sptrans-pipeline
    
    # Permitir ingress controller
    - from:
        - namespaceSelector:
            matchLabels:
              name: ingress-nginx
      ports:
        - protocol: TCP
          port: 8080  # Airflow
        - protocol: TCP
          port: 3000  # Grafana
        - protocol: TCP
          port: 8088  # Superset
  
  egress:
    # Permitir tráfego interno
    - to:
        - namespaceSelector:
            matchLabels:
              name: sptrans-pipeline
    
    # Permitir DNS
    - to:
        - namespaceSelector:
            matchLabels:
              name: kube-system
      ports:
        - protocol: UDP
          port: 53
    
    # Permitir acesso externo (API SPTrans, etc)
    - to:
        - namespaceSelector: {}
      ports:
        - protocol: TCP
          port: 443
        - protocol: TCP
          port: 80

---

# =============================================================================
# SERVICE ACCOUNT
# =============================================================================
# Service account padrão para pods

apiVersion: v1
kind: ServiceAccount
metadata:
  name: sptrans-service-account
  namespace: sptrans-pipeline
  labels:
    app: sptrans-pipeline

---

# =============================================================================
# ROLE
# =============================================================================
# Permissões dentro do namespace

apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: sptrans-role
  namespace: sptrans-pipeline
rules:
  # Permissões para pods
  - apiGroups: [""]
    resources: ["pods", "pods/log"]
    verbs: ["get", "list", "watch"]
  
  # Permissões para configmaps e secrets
  - apiGroups: [""]
    resources: ["configmaps", "secrets"]
    verbs: ["get", "list"]
  
  # Permissões para services
  - apiGroups: [""]
    resources: ["services"]
    verbs: ["get", "list"]

---

# =============================================================================
# ROLE BINDING
# =============================================================================
# Associar role ao service account

apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: sptrans-role-binding
  namespace: sptrans-pipeline
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: sptrans-role
subjects:
  - kind: ServiceAccount
    name: sptrans-service-account
    namespace: sptrans-pipeline

---

# =============================================================================
# PRIORITY CLASS
# =============================================================================
# Prioridade para scheduling de pods críticos

apiVersion: scheduling.k8s.io/v1
kind: PriorityClass
metadata:
  name: sptrans-high-priority
value: 1000000
globalDefault: false
description: "High priority for critical SPTrans pipeline components"

---

apiVersion: scheduling.k8s.io/v1
kind: PriorityClass
metadata:
  name: sptrans-medium-priority
value: 500000
globalDefault: false
description: "Medium priority for standard SPTrans components"

---

apiVersion: scheduling.k8s.io/v1
kind: PriorityClass
metadata:
  name: sptrans-low-priority
value: 100000
globalDefault: false
description: "Low priority for batch jobs and non-critical components"

# =============================================================================
# USAGE
# =============================================================================
# 
# Para aplicar este namespace:
#   kubectl apply -f namespace.yaml
#
# Para verificar:
#   kubectl get namespace sptrans-pipeline
#   kubectl describe namespace sptrans-pipeline
#
# Para listar recursos no namespace:
#   kubectl get all -n sptrans-pipeline
#
# Para deletar (CUIDADO!):
#   kubectl delete namespace sptrans-pipeline
#
# =============================================================================
# END
# =============================================================================
